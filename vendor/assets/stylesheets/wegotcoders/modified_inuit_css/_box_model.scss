$wgc-padding-options: (
  (
    dimension:           0,
    bem-modifier:        'none',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-paddings--none
  ),
  (
    dimension:           quarter($wgc-bsu),
    bem-modifier:        'one-quarter-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-paddings--one-quarter-bsu
  ),
  (
    dimension:           halve($wgc-bsu),
    bem-modifier:        'one-half-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-paddings--one-half-bsu
  ),
  (
    dimension:           $wgc-bsu,
    bem-modifier:        'one-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-paddings--one-bsu
  ),
  (
    dimension:           double($wgc-bsu),
    bem-modifier:        'two-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-paddings--two-bsu
  ),
  (
    dimension:           quadruple($wgc-bsu),
    bem-modifier:        'four-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-paddings--four-bsu
  )
);

$wgc-margin-options: (
  (
    dimension:           0,
    bem-modifier:        'none',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-margins--none
  ),
  (
    dimension:           quarter($wgc-bsu),
    bem-modifier:        'one-quarter-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-margins--one-quarter-bsu
  ),
  (
    dimension:           halve($wgc-bsu),
    bem-modifier:        'one-half-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-margins--one-half-bsu
  ),
  (
    dimension:           $wgc-bsu,
    bem-modifier:        'one-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-margins--one-bsu
  ),
  (
    dimension:           double($wgc-bsu),
    bem-modifier:        'two-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-margins--two-bsu
  ),
  (
    dimension:           quadruple($wgc-bsu),
    bem-modifier:        'four-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-margins--four-bsu
  )
);

$wgc-negative-margin-options: (
  (
    dimension:           quarter(-$wgc-bsu),
    bem-modifier:        'one-quarter-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-negative-margins--one-quarter-bsu
  ),
  (
    dimension:           halve(-$wgc-bsu),
    bem-modifier:        'one-half-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-negative-margins--one-half-bsu
  ),
  (
    dimension:           -$wgc-bsu,
    bem-modifier:        'one-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-negative-margins--one-bsu
  ),
  (
    dimension:           double(-$wgc-bsu),
    bem-modifier:        'two-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-negative-margins--two-bsu
  ),
  (
    dimension:           quadruple(-$wgc-bsu),
    bem-modifier:        'four-bsu',
    allowed-breakpoints: $wgc-allowed-breakpoints-for-negative-margins--four-bsu
  )
);

@mixin wgc-paddings($dimension, $bem-modifier, $allowed-breakpoints) {
  @each $breakpoint in $wgc-breakpoints {
    $breakpoint-scope: map-get($breakpoint, breakpoint-scope);

    @if (breakpoint-scope-is-allowed($breakpoint-scope, $allowed-breakpoints)) {
      @include wgc-media-query($breakpoint-scope) {
        .#{$wgc-namespace}__#{$breakpoint-scope}-paddings-all--#{$bem-modifier} {
          padding:         $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-padding-top--#{$bem-modifier} {
          padding-top:     $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-padding-right--#{$bem-modifier} {
          padding-right:   $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-padding-bottom--#{$bem-modifier} {
          padding-bottom:  $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-padding-left--#{$bem-modifier} {
          padding-left:    $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-paddings-horizontal--#{$bem-modifier} {
          padding-right:   $dimension !important;
          padding-left:    $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-paddings-vertical--#{$bem-modifier} {
          padding-top:     $dimension !important;
          padding-bottom:  $dimension !important;
        }
      }
    }
  }
}

@mixin wgc-margins($dimension, $bem-modifier, $allowed-breakpoints) {
  @each $breakpoint in $wgc-breakpoints {
    $breakpoint-scope: map-get($breakpoint, breakpoint-scope);

    @if (breakpoint-scope-is-allowed($breakpoint-scope, $allowed-breakpoints)) {
      @include wgc-media-query($breakpoint-scope) {
        .#{$wgc-namespace}__#{$breakpoint-scope}-margins-all--#{$bem-modifier} {
          margin:         $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-margin-top--#{$bem-modifier} {
          margin-top:     $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-margin-right--#{$bem-modifier} {
          margin-right:   $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-margin-bottom--#{$bem-modifier} {
          margin-bottom:  $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-margin-left--#{$bem-modifier} {
          margin-left:    $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-margins-horizontal--#{$bem-modifier} {
          margin-right:   $dimension !important;
          margin-left:    $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-margins-vertical--#{$bem-modifier} {
          margin-top:     $dimension !important;
          margin-bottom:  $dimension !important;
        }
      }
    }
  }
}

@mixin wgc-negative-margins($dimension, $bem-modifier, $allowed-breakpoints) {
  @each $breakpoint in $wgc-breakpoints {
    $breakpoint-scope: map-get($breakpoint, breakpoint-scope);

    @if (breakpoint-scope-is-allowed($breakpoint-scope, $allowed-breakpoints)) {
      @include wgc-media-query($breakpoint-scope) {
        .#{$wgc-namespace}__#{$breakpoint-scope}-negative-margins-all--#{$bem-modifier} {
          margin:         $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-negative-margin-top--#{$bem-modifier} {
          margin-top:     $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-negative-margin-right--#{$bem-modifier} {
          margin-right:   $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-negative-margin-bottom--#{$bem-modifier} {
          margin-bottom:  $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-negative-margin-left--#{$bem-modifier} {
          margin-left:    $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-negative-margins-horizontal--#{$bem-modifier} {
          margin-right:   $dimension !important;
          margin-left:    $dimension !important;
        }

        .#{$wgc-namespace}__#{$breakpoint-scope}-negative-margins-vertical--#{$bem-modifier} {
          margin-top:     $dimension !important;
          margin-bottom:  $dimension !important;
        }
      }
    }
  }
}

@each $option in $wgc-padding-options {
  $dimension:           map-get($option, dimension);
  $bem-modifier:        map-get($option, bem-modifier);
  $allowed-breakpoints: map-get($option, allowed-breakpoints);

  @include wgc-paddings($dimension, $bem-modifier, $allowed-breakpoints);
}

@each $option in $wgc-margin-options {
  $dimension:           map-get($option, dimension);
  $bem-modifier:        map-get($option, bem-modifier);
  $allowed-breakpoints: map-get($option, allowed-breakpoints);

  @include wgc-margins($dimension, $bem-modifier, $allowed-breakpoints);
}

@each $option in $wgc-negative-margin-options {
  $dimension:           map-get($option, dimension);
  $bem-modifier:        map-get($option, bem-modifier);
  $allowed-breakpoints: map-get($option, allowed-breakpoints);

  @include wgc-negative-margins($dimension, $bem-modifier, $allowed-breakpoints);
}
